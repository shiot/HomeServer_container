#!/bin/bash

ctRootpw=$(createPassword 12)   # Create Rootpassword for Container
nasneeded=true                  # Container need/can have a NAS
dvbneeded=false                 # Container need/can have a DVB/TV-Card
vganeeded=false                 # Container need/can have a VGA-Card
ctTemplate=debian9                # Type of Hostsystem - ubuntu, debian, so on
lxchostname=3cx            # Name of the Container
hddsize=32                       # HDD Size in GB
cpucores=1                      # Number of CPU cores
memory=1024                      # Memorysize in MB
swap=1024                        # SWAP size in MB
unprivileged=0                  # Privileged/Unprivileged Container, 0=False - 1=True
features="mount=cifs;nfs"                     # force_rw_sys=<1|0>,fuse=<1|0>,keyctl=<1|0>,mknod=<1|0>,mount=<fstype;fstype;...>,nesting=<1|0> in quotation marks
containerFolder=""              # Space separated list of folders ("/root/DOCKER" "/media/movies") - NAS Folders will create automaticly (/mnt/backup and /media)
containerSoftware="iperf libicu57 dphys-swapfile 3cxpbx"            # Space separated list of packages to install (curl wget)
fwPort=( 5015 5001 5062 5062 5063 5090 5090 "9000:10999" )
fwNetwork=( network pnetwork "" "" "" "" "" "" )
fwProtocol=( tcp tcp udp tcp tcp udp tcp udp )
fwDescription=( "Weboberfläche zur Ersteinrichtung" "Weboberfläche" "SIP" "SIP" "secure SIP" "Tunnel" "Tunnel" "RTP" )

# Commands to be executed in the container's shell before the actual software is installed. For example, generating a repository
# list (echo \"deb https://download.example.com/repo/ubuntu focal main\" | tee /etc/apt/sources.list.d/example.list) or adding a
# PPA, for example (apt-add-repository -y ppa:example/example). or download a Docker-Compose configuration file (wget -qO - /root/docker/file.conf https://example.domain.com/file.conf).
# Finish every Command line with space Backslash.
# If you install a SQL database and need to do a SQL secure, this can be done with the command/call to the function "lxcSQLSecure".
commandsFirst="\
              wget -qO - http://downloads-global.3cx.com/downloads/3cxpbx/public.key | apt-key add - > /dev/null 2>&1 \ 
              echo \"deb http://downloads-global.3cx.com/downloads/debian stretch main\" | tee /etc/apt/sources.list.d/3cxpbx.list > /dev/null 2>&1 \ 
"

# Commands to be executed in the container's shell before the actual software is installed. For example, generating a repository
# list (echo \"deb https://download.example.com/repo/ubuntu focal main\" | tee /etc/apt/sources.list.d/example.list) or adding a
# PPA, for example (apt-add-repository -y ppa:example/example). or download a Docker-Compose configuration file (wget -qO - /root/docker/file.conf https://example.domain.com/file.conf).
# Finish every Command line with space Backslash.
#commandsSecond="\ 
#               Command1 \ 
#               Command2 \ 
#               Command3 \ 
#"
containerDescription=$(echo -e "\ 
WebGUI (Administration)
Adresse:      http://$ctIP:5001
Benutzer:     Administrator
Passwort:     changeme
WebGUI (User)
Adresse:      http://$ctIP:5001/webclient
Benutzer:     Nebenstellennummer
Passwort:     wird per E-Mail verschickt
WebGUI (Ersteinrichtung)
Adresse:      http://$ctIP:5015?v=2
")
